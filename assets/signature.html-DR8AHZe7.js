import{_ as p,e as i,f as c,i as u,j as t,r,o as k,g as n,h as s}from"./app-DafxwyWQ.js";const m={};function d(v,a){const l=r("CodeTabs");return k(),i("div",null,[a[4]||(a[4]=c(`<h1 id="signing-api-requests" tabindex="-1"><a class="header-anchor" href="#signing-api-requests"><span>Signing API requests</span></a></h1><h2 id="build-the-string-to-sign" tabindex="-1"><a class="header-anchor" href="#build-the-string-to-sign"><span>Build the string to sign</span></a></h2><p>Request parameters example:</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;client_key&quot;</span><span class="token operator">:</span> <span class="token string">&quot;01h6tn69wfcpy5q5x3vpb3x9me&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;amount&quot;</span><span class="token operator">:</span> <span class="token string">&quot;50000.00&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;channel_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1001&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;out_trade_no&quot;</span><span class="token operator">:</span> <span class="token string">&quot;20230101000000&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;notify_url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://your-domain.com/webhook&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;extra&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{\\&quot;bank_code\\&quot;:\\&quot;VCB\\&quot;}&quot;</span><span class="token punctuation">,</span></span>
<span class="line highlighted">  <span class="token property">&quot;empty_string&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span></span>
<span class="line highlighted">  <span class="token property">&quot;null_value&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span></span>
<span class="line highlighted">  <span class="token property">&quot;should_not_include&quot;</span><span class="token operator">:</span> <span class="token string">&quot;example&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filter-parameters" tabindex="-1"><a class="header-anchor" href="#filter-parameters"><span>Filter parameters</span></a></h3><p>Exclude null, empty, and specified keys.</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;client_key&quot;</span><span class="token operator">:</span> <span class="token string">&quot;01h6tn69wfcpy5q5x3vpb3x9me&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;amount&quot;</span><span class="token operator">:</span> <span class="token string">&quot;50000.00&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;channel_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1001&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;out_trade_no&quot;</span><span class="token operator">:</span> <span class="token string">&quot;20230101000000&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;notify_url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://your-domain.com/webhook&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;extra&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{\\&quot;bank_code\\&quot;:\\&quot;VCB\\&quot;}&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sort-the-parameters" tabindex="-1"><a class="header-anchor" href="#sort-the-parameters"><span>Sort the parameters</span></a></h3><p>Sort the parameters by key in ascending order.</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;amount&quot;</span><span class="token operator">:</span> <span class="token string">&quot;50000.00&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;channel_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1001&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;client_key&quot;</span><span class="token operator">:</span> <span class="token string">&quot;01h6tn69wfcpy5q5x3vpb3x9me&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;extra&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{\\&quot;bank_code\\&quot;:\\&quot;VCB\\&quot;}&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;notify_url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://your-domain.com/webhook&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;out_trade_no&quot;</span><span class="token operator">:</span> <span class="token string">&quot;20230101000000&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concatenate-strings" tabindex="-1"><a class="header-anchor" href="#concatenate-strings"><span>Concatenate strings</span></a></h3><p>Use &amp; to concatenate request parameters and = to join keys and values.</p><p><code>amount=50000.00&amp;channel_id=1001&amp;client_key=01h6tn69wfcpy5q5x3vpb3x9me&amp;extra={&quot;bank_code&quot;:&quot;VCB&quot;}&amp;notify_url=https://your-domain.com/webhook&amp;out_trade_no=20230101000000</code></p><h2 id="hmacsha256-example" tabindex="-1"><a class="header-anchor" href="#hmacsha256-example"><span>HmacSHA256 example</span></a></h2>`,14)),u(l,{id:"36",data:[{id:"Java"},{id:"PHP"}]},{title0:t(({value:e,isActive:o})=>a[0]||(a[0]=[s("Java")])),title1:t(({value:e,isActive:o})=>a[1]||(a[1]=[s("PHP")])),tab0:t(({value:e,isActive:o})=>a[2]||(a[2]=[n("div",{class:"language-java line-numbers-mode","data-highlighter":"prismjs","data-ext":"java","data-title":"java"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("com"),n("span",{class:"token punctuation"},"."),s("google"),n("span",{class:"token punctuation"},"."),s("gson"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"Gson")]),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("javax"),n("span",{class:"token punctuation"},"."),s("crypto"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"Mac")]),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("javax"),n("span",{class:"token punctuation"},"."),s("crypto"),n("span",{class:"token punctuation"},"."),s("spec"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"SecretKeySpec")]),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("java"),n("span",{class:"token punctuation"},"."),s("math"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"BigInteger")]),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("java"),n("span",{class:"token punctuation"},"."),s("nio"),n("span",{class:"token punctuation"},"."),s("charset"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"StandardCharsets")]),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("java"),n("span",{class:"token punctuation"},"."),s("util"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token operator"},"*")]),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("java"),n("span",{class:"token punctuation"},"."),s("util"),n("span",{class:"token punctuation"},"."),s("stream"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"Collectors")]),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Main"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" args"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token class-name"},"String"),s(" accessKey "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"01h6tn69wfcpy5q5x3vpb3x9me"'),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// Your client key")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token class-name"},"String"),s(" secretKey "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"your-client-secret"'),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token comment"},"// Request parameters")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token class-name"},"Map"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"Object"),n("span",{class:"token punctuation"},">")]),s(" params "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"HashMap"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},">")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("        params"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"put"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"client_key"'),n("span",{class:"token punctuation"},","),s(" accessKey"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("        params"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"put"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"amount"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"50000.00"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("        params"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"put"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"channel_id"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"1001"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("        params"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"put"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"out_trade_no"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"20230101000000"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("        params"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"put"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"notify_url"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"https://your-domain.com/webhook"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token comment"},"// Ensure 'extra' is always a JSON string")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token comment"},"//")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token comment"},'// Note: Not every request requires the "extra" parameter,')]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token comment"},"// Please refer to the request examples for each country.")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token comment"},"// The following example is for a specific bank in Vietnam to receive money.")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token class-name"},"Map"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},">")]),s(" extra "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"HashMap"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},">")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("        extra"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"put"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"bank_code"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"VCB"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("        params"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"put"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"extra"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"Gson"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toJson"),n("span",{class:"token punctuation"},"("),s("extra"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("        params"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"put"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"empty_string"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'""'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// Empty string (excluded from signature)")]),s(`
`),n("span",{class:"line"},[s("        params"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"put"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"null_value"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// NULL value (excluded from signature)")]),s(`
`),n("span",{class:"line"},[s("        params"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"put"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"should_not_include"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"example"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// Parameter to be excluded from the signature")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token comment"},"// Parameters to exclude from the signature")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token class-name"},"Set"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},">")]),s(" except "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"HashSet"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},">")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"List"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"of"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"should_not_include"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token comment"},"// Filter parameters (exclude null, empty, and specified keys)")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token class-name"},"Map"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"Object"),n("span",{class:"token punctuation"},">")]),s(" filteredParams "),n("span",{class:"token operator"},"="),s(" params"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"entrySet"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"stream"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("                "),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"filter"),n("span",{class:"token punctuation"},"("),s("entry "),n("span",{class:"token operator"},"->"),s(),n("span",{class:"token operator"},"!"),s("except"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"contains"),n("span",{class:"token punctuation"},"("),s("entry"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getKey"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"&&"),s(" entry"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getValue"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"null"),s(),n("span",{class:"token operator"},"&&"),s(),n("span",{class:"token operator"},"!"),s("entry"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getValue"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toString"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"isEmpty"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("                "),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"collect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Collectors"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toMap"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},[s("Map"),n("span",{class:"token punctuation"},"."),s("Entry")]),n("span",{class:"token operator"},"::"),n("span",{class:"token function"},"getKey"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},[s("Map"),n("span",{class:"token punctuation"},"."),s("Entry")]),n("span",{class:"token operator"},"::"),n("span",{class:"token function"},"getValue"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token comment"},"// Sort the parameters by key in ascending order")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token class-name"},"TreeMap"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"Object"),n("span",{class:"token punctuation"},">")]),s(" sortedParams "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"TreeMap"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},">")]),n("span",{class:"token punctuation"},"("),s("filteredParams"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token comment"},"// Build the string to sign")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token class-name"},"String"),s(" stringToSign "),n("span",{class:"token operator"},"="),s(" sortedParams"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"entrySet"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"stream"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("                "),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"map"),n("span",{class:"token punctuation"},"("),s("entry "),n("span",{class:"token operator"},"->"),s(" entry"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getKey"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token string"},'"="'),s(),n("span",{class:"token operator"},"+"),s(" entry"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getValue"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("                "),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"collect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Collectors"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"joining"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"&"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),s("out"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"println"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"String to Sign: "'),s(),n("span",{class:"token operator"},"+"),s(" stringToSign"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token comment"},"// Output:")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token comment"},'// amount=50000.00&channel_id=1001&client_key=01h6tn69wfcpy5q5x3vpb3x9me&extra={"bank_code":"VCB"}&notify_url=https://your-domain.com/webhook&out_trade_no=20230101000000')]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token comment"},"// Generate the HMAC-SHA256 signature")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token keyword"},"byte"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" hmacSha256 "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"calcHmacSha256"),n("span",{class:"token punctuation"},"(")]),s(`
`),n("span",{class:"line"},[s("                secretKey"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getBytes"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"StandardCharsets"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"UTF_8"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},",")]),s(`
`),n("span",{class:"line"},[s("                stringToSign"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getBytes"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"StandardCharsets"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"UTF_8"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),s("out"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"printf"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Signature: %064x%n"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"BigInteger"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(" hmacSha256"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token comment"},"// Output:")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token comment"},"// 32db0797717edf25775a95cbbf61c4f693b47604a309fb63d46e36faf75e58ce")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token comment"},"// Calculate the HMAC-SHA256 signature")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token keyword"},"byte"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token function"},"calcHmacSha256"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"byte"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" secretKey"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"byte"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" stringToSign"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token keyword"},"byte"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" hmacSha256 "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token keyword"},"try"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("            "),n("span",{class:"token class-name"},"Mac"),s(" mac "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"Mac"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getInstance"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"HmacSHA256"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("            "),n("span",{class:"token class-name"},"SecretKeySpec"),s(" secretKeySpec "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"SecretKeySpec"),n("span",{class:"token punctuation"},"("),s("secretKey"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"HmacSHA256"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("            mac"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"init"),n("span",{class:"token punctuation"},"("),s("secretKeySpec"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("            hmacSha256 "),n("span",{class:"token operator"},"="),s(" mac"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"doFinal"),n("span",{class:"token punctuation"},"("),s("stringToSign"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"catch"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Exception"),s(" e"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("            "),n("span",{class:"token keyword"},"throw"),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"RuntimeException"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Failed to calculate HMAC-SHA256"'),n("span",{class:"token punctuation"},","),s(" e"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token keyword"},"return"),s(" hmacSha256"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),tab1:t(({value:e,isActive:o})=>a[3]||(a[3]=[n("div",{class:"language-php line-numbers-mode","data-highlighter":"prismjs","data-ext":"php","data-title":"php"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token php language-php"},[n("span",{class:"token delimiter important"},"<?php")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token variable"},"$accessKey"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string double-quoted-string"},'"01h6tn69wfcpy5q5x3vpb3x9me"'),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// Your client key")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token variable"},"$secretKey"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string double-quoted-string"},'"your-client-secret"'),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// Request parameters")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token variable"},"$params"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"[")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token string double-quoted-string"},'"client_key"'),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token variable"},"$accessKey"),n("span",{class:"token punctuation"},",")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token string double-quoted-string"},'"amount"'),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token string double-quoted-string"},'"50000.00"'),n("span",{class:"token punctuation"},",")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token string double-quoted-string"},'"channel_id"'),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token string double-quoted-string"},'"1001"'),n("span",{class:"token punctuation"},",")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token string double-quoted-string"},'"out_trade_no"'),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token string double-quoted-string"},'"20230101000000"'),n("span",{class:"token punctuation"},",")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token string double-quoted-string"},'"notify_url"'),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token string double-quoted-string"},'"https://your-domain.com/webhook"'),n("span",{class:"token punctuation"},",")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token comment"},"// Ensure 'extra' is always a JSON string")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token comment"},"//")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token comment"},'// Note: Not every request requires the "extra" parameter,')]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token comment"},"// Please refer to the request examples for each country.")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token comment"},"// The following example is for a specific bank in Vietnam to receive money.")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token string double-quoted-string"},'"extra"'),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token function"},"json_encode"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"[")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token string double-quoted-string"},'"bank_code"'),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token string double-quoted-string"},'"VCB"'),n("span",{class:"token punctuation"},",")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},",")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token string double-quoted-string"},'"empty_string"'),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token string double-quoted-string"},'""'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token comment"},"// Empty string (excluded from the signature)")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token string double-quoted-string"},'"null_value"'),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token constant"},"null"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token comment"},"// NULL value (excluded from the signature)")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token string double-quoted-string"},'"should_not_include"'),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token string double-quoted-string"},'"example"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token comment"},"// Parameter to be excluded from the signature")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// Define parameters to exclude from the signature")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token variable"},"$except"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"[")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token string double-quoted-string"},'"should_not_include"'),n("span",{class:"token punctuation"},",")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// Filter parameters")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token variable"},"$params"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"array_filter"),n("span",{class:"token punctuation"},"("),n("span",{class:"token variable"},"$params"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token variable"},"$value"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token variable"},"$key"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"use"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token variable"},"$except"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token operator"},"!"),n("span",{class:"token function"},"in_array"),n("span",{class:"token punctuation"},"("),n("span",{class:"token variable"},"$key"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token variable"},"$except"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"&&"),s(),n("span",{class:"token variable"},"$value"),s(),n("span",{class:"token operator"},"!=="),s(),n("span",{class:"token string single-quoted-string"},"''"),s(),n("span",{class:"token operator"},"&&"),s(),n("span",{class:"token operator"},"!"),n("span",{class:"token function"},"is_null"),n("span",{class:"token punctuation"},"("),n("span",{class:"token variable"},"$value"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token constant"},"ARRAY_FILTER_USE_BOTH"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// Sort the parameters by key in ascending (lexicographical) order")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token function"},"ksort"),n("span",{class:"token punctuation"},"("),n("span",{class:"token variable"},"$params"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// Build the string to sign")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token variable"},"$stringToSign"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"implode"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string single-quoted-string"},"'&'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token function"},"array_map"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token variable"},"$key"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token variable"},"$value"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token string double-quoted-string"},[s('"'),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),n("span",{class:"token variable"},"$key"),n("span",{class:"token punctuation"},"}")]),s("="),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),n("span",{class:"token variable"},"$value"),n("span",{class:"token punctuation"},"}")]),s('"')]),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token function"},"array_keys"),n("span",{class:"token punctuation"},"("),n("span",{class:"token variable"},"$params"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token variable"},"$params"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token function"},"var_dump"),n("span",{class:"token punctuation"},"("),n("span",{class:"token variable"},"$stringToSign"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// Output:")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},'// amount=50000.00&channel_id=1001&client_key=01h6tn69wfcpy5q5x3vpb3x9me&extra={"bank_code":"VCB"}&notify_url=https://your-domain.com/webhook&out_trade_no=20230101000000')]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// Generate the HMAC-SHA256 signature")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// Use the hash_hmac() function to create the signature with the secret key")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token variable"},"$signature"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"hash_hmac"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string single-quoted-string"},"'sha256'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token variable"},"$stringToSign"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token variable"},"$secretKey"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token function"},"var_dump"),n("span",{class:"token punctuation"},"("),n("span",{class:"token variable"},"$signature"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// Output:")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// 32db0797717edf25775a95cbbf61c4f693b47604a309fb63d46e36faf75e58ce")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"})])])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1}),a[5]||(a[5]=c(`<h2 id="signed-request-example" tabindex="-1"><a class="header-anchor" href="#signed-request-example"><span>Signed request example</span></a></h2><p><strong>Note: Not every request requires the <code>extra</code> parameter, Please refer to the request examples for each country.</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">curl</span> <span class="token parameter variable">-X</span> POST <span class="token punctuation">\\</span></span>
<span class="line">  https://example.com/api/v1/trades <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-H</span> <span class="token string">&quot;Accept: application/json&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-H</span> <span class="token string">&quot;Content-Type: application/json&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-d</span> <span class="token string">&#39;{</span>
<span class="line">    &quot;client_key&quot;: &quot;01h6tn69wfcpy5q5x3vpb3x9me&quot;,</span>
<span class="line">    &quot;amount&quot;: &quot;50000.00&quot;,</span>
<span class="line">    &quot;channel_id&quot;: &quot;1001&quot;,</span>
<span class="line">    &quot;out_trade_no&quot;: &quot;20230101000000&quot;,</span>
<span class="line">    &quot;notify_url&quot;: &quot;https://your-domain.com/webhook&quot;,</span>
<span class="line">    &quot;extra&quot;: &quot;{\\&quot;bank_code\\&quot;:\\&quot;VCB\\&quot;}&quot;,</span>
<span class="line">    &quot;signature&quot;: &quot;32db0797717edf25775a95cbbf61c4f693b47604a309fb63d46e36faf75e58ce&quot;</span>
<span class="line">  }&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3))])}const g=p(m,[["render",d],["__file","signature.html.vue"]]),h=JSON.parse('{"path":"/guide/signature.html","title":"Signing API requests","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Build the string to sign","slug":"build-the-string-to-sign","link":"#build-the-string-to-sign","children":[{"level":3,"title":"Filter parameters","slug":"filter-parameters","link":"#filter-parameters","children":[]},{"level":3,"title":"Sort the parameters","slug":"sort-the-parameters","link":"#sort-the-parameters","children":[]},{"level":3,"title":"Concatenate strings","slug":"concatenate-strings","link":"#concatenate-strings","children":[]}]},{"level":2,"title":"HmacSHA256 example","slug":"hmacsha256-example","link":"#hmacsha256-example","children":[]},{"level":2,"title":"Signed request example","slug":"signed-request-example","link":"#signed-request-example","children":[]}],"git":{},"filePathRelative":"guide/signature.md"}');export{g as comp,h as data};
